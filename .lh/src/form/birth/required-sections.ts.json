{
    "sourceFile": "src/form/birth/required-sections.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 45,
            "patches": [
                {
                    "date": 1713981718149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1718667930268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,10 @@\n   PASSPORT: 'PASSPORT',\n   OTHER: 'OTHER',\n   NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n   PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n-  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY'\n+  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n+  AFFIDAVIT: 'AFFIDAVIT'\n }\n \n export const documentsSection = {\n   id: 'documents',\n@@ -194,8 +195,12 @@\n             },\n             {\n               value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n               label: formMessageDescriptors.assignedResponsibilityProof\n+            },\n+            {\n+              value: birthDocumentType.AFFIDAVIT,\n+              label: formMessageDescriptors.affidavit\n             }\n           ],\n           conditionals: [\n             {\n@@ -204,8 +209,39 @@\n                 \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n             }\n           ],\n           mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocAffidavit',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.otherBirthSupportingDocuments,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n+              label: formMessageDescriptors.legalGuardianProof\n+            },\n+            {\n+              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n+              label: formMessageDescriptors.assignedResponsibilityProof\n+            },\n+            {\n+              value: birthDocumentType.AFFIDAVIT,\n+              label: formMessageDescriptors.affidavit\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n         }\n       ]\n     }\n   ]\n"
                },
                {
                    "date": 1718668162828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,10 @@\n   MOTHER: 'MOTHER',\n   PARENT: 'PARENT',\n   OTHER: 'OTHER',\n   INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n-  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF'\n+  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n+  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n }\n \n export const birthDocumentType = {\n   BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n@@ -213,23 +214,16 @@\n         },\n         {\n           name: 'uploadDocAffidavit',\n           type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.otherBirthSupportingDocuments,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n+          label: formMessageDescriptors.affidavitSupportingDocuments,\n+          initialValue: birthDocumentType.AFFIDAVIT,\n+          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n           hideAsterisk: true,\n+          custom: true,\n           validator: [],\n           options: [\n             {\n-              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n-              label: formMessageDescriptors.legalGuardianProof\n-            },\n-            {\n-              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n-              label: formMessageDescriptors.assignedResponsibilityProof\n-            },\n-            {\n               value: birthDocumentType.AFFIDAVIT,\n               label: formMessageDescriptors.affidavit\n             }\n           ],\n"
                },
                {
                    "date": 1718668180603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,9 +230,9 @@\n           conditionals: [\n             {\n               action: 'hide',\n               expression:\n-                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n+                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(values.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(values.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         }\n"
                },
                {
                    "date": 1718668208561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,238 @@\n+import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n+import { formMessageDescriptors } from '../common/messages'\n+import { ISerializedFormSection } from '../types/types'\n+import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n+\n+export const registrationSection = {\n+  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n+  viewType: 'hidden',\n+  name: {\n+    defaultMessage: 'Registration',\n+    description: 'Form section name for Registration',\n+    id: 'form.section.declaration.name'\n+  },\n+  groups: [],\n+  mapping: getSectionMapping('registration')\n+} as ISerializedFormSection\n+\n+export const birthDocumentExtraValue = {\n+  CHILD: 'CHILD',\n+  FATHER: 'FATHER',\n+  MOTHER: 'MOTHER',\n+  PARENT: 'PARENT',\n+  OTHER: 'OTHER',\n+  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n+  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n+  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n+}\n+\n+export const birthDocumentType = {\n+  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n+  NATIONAL_ID: 'NATIONAL_ID',\n+  PASSPORT: 'PASSPORT',\n+  OTHER: 'OTHER',\n+  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n+  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n+  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n+  AFFIDAVIT: 'AFFIDAVIT'\n+}\n+\n+export const documentsSection = {\n+  id: 'documents',\n+  viewType: 'form',\n+  name: formMessageDescriptors.documentsName,\n+  title: {\n+    defaultMessage: 'Attaching supporting documents',\n+    description: 'Form section title for Documents',\n+    id: 'form.section.documents.title'\n+  },\n+  groups: [\n+    {\n+      id: 'documents-view-group',\n+      fields: [\n+        {\n+          name: 'paragraph',\n+          type: 'PARAGRAPH',\n+          label: formMessageDescriptors.documentsParagraph,\n+          initialValue: '',\n+          validator: []\n+        },\n+        {\n+          name: 'uploadDocAffidavit',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.affidavitSupportingDocuments,\n+          initialValue: birthDocumentType.AFFIDAVIT,\n+          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n+          hideAsterisk: true,\n+          custom: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.AFFIDAVIT,\n+              label: formMessageDescriptors.affidavit\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(values.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(values.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForChildDOB',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfBirth,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.CHILD,\n+          hideAsterisk: true,\n+          required: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n+              label: formMessageDescriptors.docTypeChildBirthProof\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForMother',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfMothersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.MOTHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Mother only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.mother && !draftData.mother.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForFather',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfFathersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.FATHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Father only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.father && !draftData.father.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForInformant',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfInformantsID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForProofOfLegalGuardian',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.otherBirthSupportingDocuments,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n+              label: formMessageDescriptors.legalGuardianProof\n+            },\n+            {\n+              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n+              label: formMessageDescriptors.assignedResponsibilityProof\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        }\n+      ]\n+    }\n+  ]\n+} as ISerializedFormSection\n"
                },
                {
                    "date": 1718668440833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,10 +74,9 @@\n           ],\n           conditionals: [\n             {\n               action: 'hide',\n-              expression:\n-                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(values.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(values.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n+              expression: 'draft.reasonForLateRegistration'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n@@ -235,246 +234,4 @@\n       ]\n     }\n   ]\n } as ISerializedFormSection\n-import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n-import { formMessageDescriptors } from '../common/messages'\n-import { ISerializedFormSection } from '../types/types'\n-import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n-\n-export const registrationSection = {\n-  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n-  viewType: 'hidden',\n-  name: {\n-    defaultMessage: 'Registration',\n-    description: 'Form section name for Registration',\n-    id: 'form.section.declaration.name'\n-  },\n-  groups: [],\n-  mapping: getSectionMapping('registration')\n-} as ISerializedFormSection\n-\n-export const birthDocumentExtraValue = {\n-  CHILD: 'CHILD',\n-  FATHER: 'FATHER',\n-  MOTHER: 'MOTHER',\n-  PARENT: 'PARENT',\n-  OTHER: 'OTHER',\n-  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n-  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n-  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n-}\n-\n-export const birthDocumentType = {\n-  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n-  NATIONAL_ID: 'NATIONAL_ID',\n-  PASSPORT: 'PASSPORT',\n-  OTHER: 'OTHER',\n-  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n-  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n-  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n-  AFFIDAVIT: 'AFFIDAVIT'\n-}\n-\n-export const documentsSection = {\n-  id: 'documents',\n-  viewType: 'form',\n-  name: formMessageDescriptors.documentsName,\n-  title: {\n-    defaultMessage: 'Attaching supporting documents',\n-    description: 'Form section title for Documents',\n-    id: 'form.section.documents.title'\n-  },\n-  groups: [\n-    {\n-      id: 'documents-view-group',\n-      fields: [\n-        {\n-          name: 'paragraph',\n-          type: 'PARAGRAPH',\n-          label: formMessageDescriptors.documentsParagraph,\n-          initialValue: '',\n-          validator: []\n-        },\n-        {\n-          name: 'uploadDocForChildDOB',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfBirth,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.CHILD,\n-          hideAsterisk: true,\n-          required: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n-              label: formMessageDescriptors.docTypeChildBirthProof\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForMother',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfMothersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.MOTHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Mother only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.mother && !draftData.mother.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForFather',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfFathersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.FATHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Father only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.father && !draftData.father.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForInformant',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfInformantsID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForProofOfLegalGuardian',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.otherBirthSupportingDocuments,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n-              label: formMessageDescriptors.legalGuardianProof\n-            },\n-            {\n-              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n-              label: formMessageDescriptors.assignedResponsibilityProof\n-            },\n-            {\n-              value: birthDocumentType.AFFIDAVIT,\n-              label: formMessageDescriptors.affidavit\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocAffidavit',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.affidavitSupportingDocuments,\n-          initialValue: birthDocumentType.AFFIDAVIT,\n-          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n-          hideAsterisk: true,\n-          custom: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.AFFIDAVIT,\n-              label: formMessageDescriptors.affidavit\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(values.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(values.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        }\n-      ]\n-    }\n-  ]\n-} as ISerializedFormSection\n"
                },
                {
                    "date": 1718668448186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n           ],\n           conditionals: [\n             {\n               action: 'hide',\n-              expression: 'draft.reasonForLateRegistration'\n+              expression: '!draft.reasonForLateRegistration'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718668510714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n           ],\n           conditionals: [\n             {\n               action: 'hide',\n-              expression: '!draft.reasonForLateRegistration'\n+              expression: '!values.reasonForLateRegistration'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718668534108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n           ],\n           conditionals: [\n             {\n               action: 'hide',\n-              expression: '!values.reasonForLateRegistration'\n+              expression: 'values.reasonForLateRegistration'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718668546894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,12 +72,12 @@\n               label: formMessageDescriptors.affidavit\n             }\n           ],\n           conditionals: [\n-            {\n-              action: 'hide',\n-              expression: 'values.reasonForLateRegistration'\n-            }\n+            // {\n+            //   action: 'hide',\n+            //   expression: 'values.reasonForLateRegistration'\n+            // }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n         {\n"
                },
                {
                    "date": 1718668562630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,14 +71,9 @@\n               value: birthDocumentType.AFFIDAVIT,\n               label: formMessageDescriptors.affidavit\n             }\n           ],\n-          conditionals: [\n-            // {\n-            //   action: 'hide',\n-            //   expression: 'values.reasonForLateRegistration'\n-            // }\n-          ],\n+          conditionals: [],\n           mapping: getFieldMapping('documents')\n         },\n         {\n           name: 'uploadDocForChildDOB',\n"
                },
                {
                    "date": 1718668575129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n           label: formMessageDescriptors.affidavitSupportingDocuments,\n           initialValue: birthDocumentType.AFFIDAVIT,\n           extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n           hideAsterisk: true,\n-          custom: true,\n+          required: true,\n           validator: [],\n           options: [\n             {\n               value: birthDocumentType.AFFIDAVIT,\n"
                },
                {
                    "date": 1718668598325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,8 @@\n           label: formMessageDescriptors.affidavitSupportingDocuments,\n           initialValue: birthDocumentType.AFFIDAVIT,\n           extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n           hideAsterisk: true,\n-          required: true,\n           validator: [],\n           options: [\n             {\n               value: birthDocumentType.AFFIDAVIT,\n"
                },
                {
                    "date": 1718668646426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,8 @@\n               value: birthDocumentType.AFFIDAVIT,\n               label: formMessageDescriptors.affidavit\n             }\n           ],\n-          conditionals: [],\n           mapping: getFieldMapping('documents')\n         },\n         {\n           name: 'uploadDocForChildDOB',\n"
                },
                {
                    "date": 1718668696637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,25 +56,25 @@\n           label: formMessageDescriptors.documentsParagraph,\n           initialValue: '',\n           validator: []\n         },\n+        // {\n+        //   name: 'uploadDocAffidavit',\n+        //   type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+        //   label: formMessageDescriptors.affidavitSupportingDocuments,\n+        //   initialValue: birthDocumentType.AFFIDAVIT,\n+        //   extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n+        //   hideAsterisk: true,\n+        //   validator: [],\n+        //   options: [\n+        //     {\n+        //       value: birthDocumentType.AFFIDAVIT,\n+        //       label: formMessageDescriptors.affidavit\n+        //     }\n+        //   ],\n+        //   mapping: getFieldMapping('documents')\n+        // },\n         {\n-          name: 'uploadDocAffidavit',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.affidavitSupportingDocuments,\n-          initialValue: birthDocumentType.AFFIDAVIT,\n-          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.AFFIDAVIT,\n-              label: formMessageDescriptors.affidavit\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n           name: 'uploadDocForChildDOB',\n           type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n           label: formMessageDescriptors.proofOfBirth,\n           initialValue: '',\n"
                },
                {
                    "date": 1718668813260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,25 +56,25 @@\n           label: formMessageDescriptors.documentsParagraph,\n           initialValue: '',\n           validator: []\n         },\n-        // {\n-        //   name: 'uploadDocAffidavit',\n-        //   type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-        //   label: formMessageDescriptors.affidavitSupportingDocuments,\n-        //   initialValue: birthDocumentType.AFFIDAVIT,\n-        //   extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n-        //   hideAsterisk: true,\n-        //   validator: [],\n-        //   options: [\n-        //     {\n-        //       value: birthDocumentType.AFFIDAVIT,\n-        //       label: formMessageDescriptors.affidavit\n-        //     }\n-        //   ],\n-        //   mapping: getFieldMapping('documents')\n-        // },\n         {\n+          name: 'uploadDocAffidavit',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.affidavitSupportingDocuments,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.AFFIDAVIT,\n+              label: formMessageDescriptors.affidavit\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n           name: 'uploadDocForChildDOB',\n           type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n           label: formMessageDescriptors.proofOfBirth,\n           initialValue: '',\n"
                },
                {
                    "date": 1718669106117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,230 @@\n+import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n+import { formMessageDescriptors } from '../common/messages'\n+import { ISerializedFormSection } from '../types/types'\n+import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n+\n+export const registrationSection = {\n+  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n+  viewType: 'hidden',\n+  name: {\n+    defaultMessage: 'Registration',\n+    description: 'Form section name for Registration',\n+    id: 'form.section.declaration.name'\n+  },\n+  groups: [],\n+  mapping: getSectionMapping('registration')\n+} as ISerializedFormSection\n+\n+export const birthDocumentExtraValue = {\n+  CHILD: 'CHILD',\n+  FATHER: 'FATHER',\n+  MOTHER: 'MOTHER',\n+  PARENT: 'PARENT',\n+  OTHER: 'OTHER',\n+  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n+  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n+  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n+}\n+\n+export const birthDocumentType = {\n+  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n+  NATIONAL_ID: 'NATIONAL_ID',\n+  PASSPORT: 'PASSPORT',\n+  OTHER: 'OTHER',\n+  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n+  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n+  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n+  AFFIDAVIT: 'AFFIDAVIT'\n+}\n+\n+export const documentsSection = {\n+  id: 'documents',\n+  viewType: 'form',\n+  name: formMessageDescriptors.documentsName,\n+  title: {\n+    defaultMessage: 'Attaching supporting documents',\n+    description: 'Form section title for Documents',\n+    id: 'form.section.documents.title'\n+  },\n+  groups: [\n+    {\n+      id: 'documents-view-group',\n+      fields: [\n+        {\n+          name: 'paragraph',\n+          type: 'PARAGRAPH',\n+          label: formMessageDescriptors.documentsParagraph,\n+          initialValue: '',\n+          validator: []\n+        },\n+        {\n+          name: 'uploadDocForChildDOB2',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.affidavitSupportingDocuments,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.AFFIDAVIT,\n+              label: formMessageDescriptors.affidavit\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForChildDOB',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfBirth,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.CHILD,\n+          hideAsterisk: true,\n+          required: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n+              label: formMessageDescriptors.docTypeChildBirthProof\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForMother',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfMothersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.MOTHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Mother only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.mother && !draftData.mother.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForFather',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfFathersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.FATHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Father only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.father && !draftData.father.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForInformant',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfInformantsID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForProofOfLegalGuardian',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.otherBirthSupportingDocuments,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n+              label: formMessageDescriptors.legalGuardianProof\n+            },\n+            {\n+              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n+              label: formMessageDescriptors.assignedResponsibilityProof\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        }\n+      ]\n+    }\n+  ]\n+} as ISerializedFormSection\n"
                },
                {
                    "date": 1718669155951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,231 @@\n+import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n+import { formMessageDescriptors } from '../common/messages'\n+import { ISerializedFormSection } from '../types/types'\n+import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n+\n+export const registrationSection = {\n+  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n+  viewType: 'hidden',\n+  name: {\n+    defaultMessage: 'Registration',\n+    description: 'Form section name for Registration',\n+    id: 'form.section.declaration.name'\n+  },\n+  groups: [],\n+  mapping: getSectionMapping('registration')\n+} as ISerializedFormSection\n+\n+export const birthDocumentExtraValue = {\n+  CHILD: 'CHILD',\n+  FATHER: 'FATHER',\n+  MOTHER: 'MOTHER',\n+  PARENT: 'PARENT',\n+  OTHER: 'OTHER',\n+  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n+  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n+  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n+}\n+\n+export const birthDocumentType = {\n+  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n+  NATIONAL_ID: 'NATIONAL_ID',\n+  PASSPORT: 'PASSPORT',\n+  OTHER: 'OTHER',\n+  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n+  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n+  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n+  AFFIDAVIT: 'AFFIDAVIT'\n+}\n+\n+export const documentsSection = {\n+  id: 'documents',\n+  viewType: 'form',\n+  name: formMessageDescriptors.documentsName,\n+  title: {\n+    defaultMessage: 'Attaching supporting documents',\n+    description: 'Form section title for Documents',\n+    id: 'form.section.documents.title'\n+  },\n+  groups: [\n+    {\n+      id: 'documents-view-group',\n+      fields: [\n+        {\n+          name: 'paragraph',\n+          type: 'PARAGRAPH',\n+          label: formMessageDescriptors.documentsParagraph,\n+          initialValue: '',\n+          validator: []\n+        },\n+        {\n+          name: 'uploadDocAffidavitForChild',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.affidavitSupportingDocuments,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n+          hideAsterisk: true,\n+          required: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.AFFIDAVIT,\n+              label: formMessageDescriptors.affidavit\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForChildDOB',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfBirth,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.CHILD,\n+          hideAsterisk: true,\n+          required: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n+              label: formMessageDescriptors.docTypeChildBirthProof\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForMother',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfMothersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.MOTHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Mother only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.mother && !draftData.mother.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForFather',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfFathersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.FATHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Father only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.father && !draftData.father.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForInformant',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfInformantsID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForProofOfLegalGuardian',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.otherBirthSupportingDocuments,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n+              label: formMessageDescriptors.legalGuardianProof\n+            },\n+            {\n+              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n+              label: formMessageDescriptors.assignedResponsibilityProof\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        }\n+      ]\n+    }\n+  ]\n+} as ISerializedFormSection\n"
                },
                {
                    "date": 1718669196185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n         {\n           name: 'uploadDocAffidavitForChild',\n           type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n           label: formMessageDescriptors.affidavitSupportingDocuments,\n-          initialValue: '',\n+          initialValue: birthDocumentType.AFFIDAVIT,\n           extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n           hideAsterisk: true,\n           required: true,\n           validator: [],\n@@ -228,464 +228,4 @@\n       ]\n     }\n   ]\n } as ISerializedFormSection\n-import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n-import { formMessageDescriptors } from '../common/messages'\n-import { ISerializedFormSection } from '../types/types'\n-import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n-\n-export const registrationSection = {\n-  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n-  viewType: 'hidden',\n-  name: {\n-    defaultMessage: 'Registration',\n-    description: 'Form section name for Registration',\n-    id: 'form.section.declaration.name'\n-  },\n-  groups: [],\n-  mapping: getSectionMapping('registration')\n-} as ISerializedFormSection\n-\n-export const birthDocumentExtraValue = {\n-  CHILD: 'CHILD',\n-  FATHER: 'FATHER',\n-  MOTHER: 'MOTHER',\n-  PARENT: 'PARENT',\n-  OTHER: 'OTHER',\n-  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n-  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n-  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n-}\n-\n-export const birthDocumentType = {\n-  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n-  NATIONAL_ID: 'NATIONAL_ID',\n-  PASSPORT: 'PASSPORT',\n-  OTHER: 'OTHER',\n-  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n-  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n-  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n-  AFFIDAVIT: 'AFFIDAVIT'\n-}\n-\n-export const documentsSection = {\n-  id: 'documents',\n-  viewType: 'form',\n-  name: formMessageDescriptors.documentsName,\n-  title: {\n-    defaultMessage: 'Attaching supporting documents',\n-    description: 'Form section title for Documents',\n-    id: 'form.section.documents.title'\n-  },\n-  groups: [\n-    {\n-      id: 'documents-view-group',\n-      fields: [\n-        {\n-          name: 'paragraph',\n-          type: 'PARAGRAPH',\n-          label: formMessageDescriptors.documentsParagraph,\n-          initialValue: '',\n-          validator: []\n-        },\n-        {\n-          name: 'uploadDocForChildDOB2',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.affidavitSupportingDocuments,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.AFFIDAVIT,\n-              label: formMessageDescriptors.affidavit\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForChildDOB',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfBirth,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.CHILD,\n-          hideAsterisk: true,\n-          required: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n-              label: formMessageDescriptors.docTypeChildBirthProof\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForMother',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfMothersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.MOTHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Mother only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.mother && !draftData.mother.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForFather',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfFathersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.FATHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Father only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.father && !draftData.father.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForInformant',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfInformantsID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForProofOfLegalGuardian',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.otherBirthSupportingDocuments,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n-              label: formMessageDescriptors.legalGuardianProof\n-            },\n-            {\n-              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n-              label: formMessageDescriptors.assignedResponsibilityProof\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        }\n-      ]\n-    }\n-  ]\n-} as ISerializedFormSection\n-import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n-import { formMessageDescriptors } from '../common/messages'\n-import { ISerializedFormSection } from '../types/types'\n-import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n-\n-export const registrationSection = {\n-  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n-  viewType: 'hidden',\n-  name: {\n-    defaultMessage: 'Registration',\n-    description: 'Form section name for Registration',\n-    id: 'form.section.declaration.name'\n-  },\n-  groups: [],\n-  mapping: getSectionMapping('registration')\n-} as ISerializedFormSection\n-\n-export const birthDocumentExtraValue = {\n-  CHILD: 'CHILD',\n-  FATHER: 'FATHER',\n-  MOTHER: 'MOTHER',\n-  PARENT: 'PARENT',\n-  OTHER: 'OTHER',\n-  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n-  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n-  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n-}\n-\n-export const birthDocumentType = {\n-  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n-  NATIONAL_ID: 'NATIONAL_ID',\n-  PASSPORT: 'PASSPORT',\n-  OTHER: 'OTHER',\n-  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n-  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n-  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n-  AFFIDAVIT: 'AFFIDAVIT'\n-}\n-\n-export const documentsSection = {\n-  id: 'documents',\n-  viewType: 'form',\n-  name: formMessageDescriptors.documentsName,\n-  title: {\n-    defaultMessage: 'Attaching supporting documents',\n-    description: 'Form section title for Documents',\n-    id: 'form.section.documents.title'\n-  },\n-  groups: [\n-    {\n-      id: 'documents-view-group',\n-      fields: [\n-        {\n-          name: 'paragraph',\n-          type: 'PARAGRAPH',\n-          label: formMessageDescriptors.documentsParagraph,\n-          initialValue: '',\n-          validator: []\n-        },\n-        {\n-          name: 'uploadDocAffidavit',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.affidavitSupportingDocuments,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.AFFIDAVIT,\n-              label: formMessageDescriptors.affidavit\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForChildDOB',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfBirth,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.CHILD,\n-          hideAsterisk: true,\n-          required: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n-              label: formMessageDescriptors.docTypeChildBirthProof\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForMother',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfMothersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.MOTHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Mother only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.mother && !draftData.mother.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForFather',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfFathersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.FATHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Father only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.father && !draftData.father.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForInformant',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfInformantsID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForProofOfLegalGuardian',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.otherBirthSupportingDocuments,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n-              label: formMessageDescriptors.legalGuardianProof\n-            },\n-            {\n-              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n-              label: formMessageDescriptors.assignedResponsibilityProof\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        }\n-      ]\n-    }\n-  ]\n-} as ISerializedFormSection\n"
                },
                {
                    "date": 1718669233209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n import { formMessageDescriptors } from '../common/messages'\n import { ISerializedFormSection } from '../types/types'\n import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n+import { values } from 'lodash'\n \n export const registrationSection = {\n   id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n   viewType: 'hidden',\n@@ -60,9 +61,10 @@\n         {\n           name: 'uploadDocAffidavitForChild',\n           type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n           label: formMessageDescriptors.affidavitSupportingDocuments,\n-          initialValue: birthDocumentType.AFFIDAVIT,\n+          initialValue: '',\n+          values: birthDocumentType.AFFIDAVIT,\n           extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n           hideAsterisk: true,\n           required: true,\n           validator: [],\n"
                },
                {
                    "date": 1718669430354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,15 @@\n               value: birthDocumentType.AFFIDAVIT,\n               label: formMessageDescriptors.affidavit\n             }\n           ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n+            }\n+          ],\n           mapping: getFieldMapping('documents')\n         },\n         {\n           name: 'uploadDocForChildDOB',\n"
                },
                {
                    "date": 1718669474625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n           conditionals: [\n             {\n               action: 'hide',\n               expression:\n-                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n+                \"!values.reasonForLateRegistration || values.reasonForLateRegistration === 'NONE'\"\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718669480734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,10 +76,9 @@\n           ],\n           conditionals: [\n             {\n               action: 'hide',\n-              expression:\n-                \"!values.reasonForLateRegistration || values.reasonForLateRegistration === 'NONE'\"\n+              expression: '!values.reasonForLateRegistration'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718669524133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n+import { formMessageDescriptors } from '../common/messages'\n+import { ISerializedFormSection } from '../types/types'\n+import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n+import { values } from 'lodash'\n+\n+export const registrationSection = {\n+  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n+  viewType: 'hidden',\n+  name: {\n+    defaultMessage: 'Registration',\n+    description: 'Form section name for Registration',\n+    id: 'form.section.declaration.name'\n+  },\n+  groups: [],\n+  mapping: getSectionMapping('registration')\n+} as ISerializedFormSection\n+\n+export const birthDocumentExtraValue = {\n+  CHILD: 'CHILD',\n+  FATHER: 'FATHER',\n+  MOTHER: 'MOTHER',\n+  PARENT: 'PARENT',\n+  OTHER: 'OTHER',\n+  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n+  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n+  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n+}\n+\n+export const birthDocumentType = {\n+  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n+  NATIONAL_ID: 'NATIONAL_ID',\n+  PASSPORT: 'PASSPORT',\n+  OTHER: 'OTHER',\n+  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n+  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n+  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n+  AFFIDAVIT: 'AFFIDAVIT'\n+}\n+\n+export const documentsSection = {\n+  id: 'documents',\n+  viewType: 'form',\n+  name: formMessageDescriptors.documentsName,\n+  title: {\n+    defaultMessage: 'Attaching supporting documents',\n+    description: 'Form section title for Documents',\n+    id: 'form.section.documents.title'\n+  },\n+  groups: [\n+    {\n+      id: 'documents-view-group',\n+      fields: [\n+        {\n+          name: 'paragraph',\n+          type: 'PARAGRAPH',\n+          label: formMessageDescriptors.documentsParagraph,\n+          initialValue: '',\n+          validator: []\n+        },\n+        {\n+          name: 'uploadDocAffidavitForChild',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.affidavitSupportingDocuments,\n+          initialValue: '',\n+          values: birthDocumentType.AFFIDAVIT,\n+          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n+          hideAsterisk: true,\n+          required: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.AFFIDAVIT,\n+              label: formMessageDescriptors.affidavit\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.father && !draftData.child.reasonForLateRegistration'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForChildDOB',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfBirth,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.CHILD,\n+          hideAsterisk: true,\n+          required: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n+              label: formMessageDescriptors.docTypeChildBirthProof\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForMother',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfMothersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.MOTHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Mother only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.mother && !draftData.mother.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForFather',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfFathersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.FATHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Father only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.father && !draftData.father.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForInformant',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfInformantsID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForProofOfLegalGuardian',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.otherBirthSupportingDocuments,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n+              label: formMessageDescriptors.legalGuardianProof\n+            },\n+            {\n+              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n+              label: formMessageDescriptors.assignedResponsibilityProof\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        }\n+      ]\n+    }\n+  ]\n+} as ISerializedFormSection\n"
                },
                {
                    "date": 1718669532244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n+import { formMessageDescriptors } from '../common/messages'\n+import { ISerializedFormSection } from '../types/types'\n+import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n+import { values } from 'lodash'\n+\n+export const registrationSection = {\n+  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n+  viewType: 'hidden',\n+  name: {\n+    defaultMessage: 'Registration',\n+    description: 'Form section name for Registration',\n+    id: 'form.section.declaration.name'\n+  },\n+  groups: [],\n+  mapping: getSectionMapping('registration')\n+} as ISerializedFormSection\n+\n+export const birthDocumentExtraValue = {\n+  CHILD: 'CHILD',\n+  FATHER: 'FATHER',\n+  MOTHER: 'MOTHER',\n+  PARENT: 'PARENT',\n+  OTHER: 'OTHER',\n+  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n+  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n+  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n+}\n+\n+export const birthDocumentType = {\n+  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n+  NATIONAL_ID: 'NATIONAL_ID',\n+  PASSPORT: 'PASSPORT',\n+  OTHER: 'OTHER',\n+  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n+  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n+  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n+  AFFIDAVIT: 'AFFIDAVIT'\n+}\n+\n+export const documentsSection = {\n+  id: 'documents',\n+  viewType: 'form',\n+  name: formMessageDescriptors.documentsName,\n+  title: {\n+    defaultMessage: 'Attaching supporting documents',\n+    description: 'Form section title for Documents',\n+    id: 'form.section.documents.title'\n+  },\n+  groups: [\n+    {\n+      id: 'documents-view-group',\n+      fields: [\n+        {\n+          name: 'paragraph',\n+          type: 'PARAGRAPH',\n+          label: formMessageDescriptors.documentsParagraph,\n+          initialValue: '',\n+          validator: []\n+        },\n+        {\n+          name: 'uploadDocAffidavitForChild',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.affidavitSupportingDocuments,\n+          initialValue: '',\n+          values: birthDocumentType.AFFIDAVIT,\n+          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n+          hideAsterisk: true,\n+          required: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.AFFIDAVIT,\n+              label: formMessageDescriptors.affidavit\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.child && !draftData.child.reasonForLateRegistration'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForChildDOB',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfBirth,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.CHILD,\n+          hideAsterisk: true,\n+          required: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n+              label: formMessageDescriptors.docTypeChildBirthProof\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForMother',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfMothersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.MOTHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Mother only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.mother && !draftData.mother.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForFather',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfFathersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.FATHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Father only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.father && !draftData.father.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForInformant',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfInformantsID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForProofOfLegalGuardian',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.otherBirthSupportingDocuments,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n+              label: formMessageDescriptors.legalGuardianProof\n+            },\n+            {\n+              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n+              label: formMessageDescriptors.assignedResponsibilityProof\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        }\n+      ]\n+    }\n+  ]\n+} as ISerializedFormSection\n"
                },
                {
                    "date": 1718669612165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n           conditionals: [\n             {\n               action: 'hide',\n               expression:\n-                'draftData && draftData.child && !draftData.child.reasonForLateRegistration'\n+                'console.log(draftData) draftData && draftData.child && !draftData.child.reasonForLateRegistration'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718669617818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,10 +76,9 @@\n           ],\n           conditionals: [\n             {\n               action: 'hide',\n-              expression:\n-                'console.log(draftData) draftData && draftData.child && !draftData.child.reasonForLateRegistration'\n+              expression: 'console.log(draftData)'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n@@ -237,483 +236,4 @@\n       ]\n     }\n   ]\n } as ISerializedFormSection\n-import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n-import { formMessageDescriptors } from '../common/messages'\n-import { ISerializedFormSection } from '../types/types'\n-import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n-import { values } from 'lodash'\n-\n-export const registrationSection = {\n-  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n-  viewType: 'hidden',\n-  name: {\n-    defaultMessage: 'Registration',\n-    description: 'Form section name for Registration',\n-    id: 'form.section.declaration.name'\n-  },\n-  groups: [],\n-  mapping: getSectionMapping('registration')\n-} as ISerializedFormSection\n-\n-export const birthDocumentExtraValue = {\n-  CHILD: 'CHILD',\n-  FATHER: 'FATHER',\n-  MOTHER: 'MOTHER',\n-  PARENT: 'PARENT',\n-  OTHER: 'OTHER',\n-  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n-  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n-  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n-}\n-\n-export const birthDocumentType = {\n-  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n-  NATIONAL_ID: 'NATIONAL_ID',\n-  PASSPORT: 'PASSPORT',\n-  OTHER: 'OTHER',\n-  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n-  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n-  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n-  AFFIDAVIT: 'AFFIDAVIT'\n-}\n-\n-export const documentsSection = {\n-  id: 'documents',\n-  viewType: 'form',\n-  name: formMessageDescriptors.documentsName,\n-  title: {\n-    defaultMessage: 'Attaching supporting documents',\n-    description: 'Form section title for Documents',\n-    id: 'form.section.documents.title'\n-  },\n-  groups: [\n-    {\n-      id: 'documents-view-group',\n-      fields: [\n-        {\n-          name: 'paragraph',\n-          type: 'PARAGRAPH',\n-          label: formMessageDescriptors.documentsParagraph,\n-          initialValue: '',\n-          validator: []\n-        },\n-        {\n-          name: 'uploadDocAffidavitForChild',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.affidavitSupportingDocuments,\n-          initialValue: '',\n-          values: birthDocumentType.AFFIDAVIT,\n-          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n-          hideAsterisk: true,\n-          required: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.AFFIDAVIT,\n-              label: formMessageDescriptors.affidavit\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.father && !draftData.child.reasonForLateRegistration'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForChildDOB',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfBirth,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.CHILD,\n-          hideAsterisk: true,\n-          required: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n-              label: formMessageDescriptors.docTypeChildBirthProof\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForMother',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfMothersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.MOTHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Mother only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.mother && !draftData.mother.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForFather',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfFathersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.FATHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Father only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.father && !draftData.father.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForInformant',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfInformantsID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForProofOfLegalGuardian',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.otherBirthSupportingDocuments,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n-              label: formMessageDescriptors.legalGuardianProof\n-            },\n-            {\n-              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n-              label: formMessageDescriptors.assignedResponsibilityProof\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        }\n-      ]\n-    }\n-  ]\n-} as ISerializedFormSection\n-import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n-import { formMessageDescriptors } from '../common/messages'\n-import { ISerializedFormSection } from '../types/types'\n-import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n-import { values } from 'lodash'\n-\n-export const registrationSection = {\n-  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n-  viewType: 'hidden',\n-  name: {\n-    defaultMessage: 'Registration',\n-    description: 'Form section name for Registration',\n-    id: 'form.section.declaration.name'\n-  },\n-  groups: [],\n-  mapping: getSectionMapping('registration')\n-} as ISerializedFormSection\n-\n-export const birthDocumentExtraValue = {\n-  CHILD: 'CHILD',\n-  FATHER: 'FATHER',\n-  MOTHER: 'MOTHER',\n-  PARENT: 'PARENT',\n-  OTHER: 'OTHER',\n-  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n-  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n-  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n-}\n-\n-export const birthDocumentType = {\n-  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n-  NATIONAL_ID: 'NATIONAL_ID',\n-  PASSPORT: 'PASSPORT',\n-  OTHER: 'OTHER',\n-  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n-  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n-  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n-  AFFIDAVIT: 'AFFIDAVIT'\n-}\n-\n-export const documentsSection = {\n-  id: 'documents',\n-  viewType: 'form',\n-  name: formMessageDescriptors.documentsName,\n-  title: {\n-    defaultMessage: 'Attaching supporting documents',\n-    description: 'Form section title for Documents',\n-    id: 'form.section.documents.title'\n-  },\n-  groups: [\n-    {\n-      id: 'documents-view-group',\n-      fields: [\n-        {\n-          name: 'paragraph',\n-          type: 'PARAGRAPH',\n-          label: formMessageDescriptors.documentsParagraph,\n-          initialValue: '',\n-          validator: []\n-        },\n-        {\n-          name: 'uploadDocAffidavitForChild',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.affidavitSupportingDocuments,\n-          initialValue: '',\n-          values: birthDocumentType.AFFIDAVIT,\n-          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n-          hideAsterisk: true,\n-          required: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.AFFIDAVIT,\n-              label: formMessageDescriptors.affidavit\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression: '!values.reasonForLateRegistration'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForChildDOB',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfBirth,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.CHILD,\n-          hideAsterisk: true,\n-          required: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n-              label: formMessageDescriptors.docTypeChildBirthProof\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForMother',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfMothersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.MOTHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Mother only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.mother && !draftData.mother.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForFather',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfFathersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.FATHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Father only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.father && !draftData.father.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForInformant',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfInformantsID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForProofOfLegalGuardian',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.otherBirthSupportingDocuments,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n-              label: formMessageDescriptors.legalGuardianProof\n-            },\n-            {\n-              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n-              label: formMessageDescriptors.assignedResponsibilityProof\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        }\n-      ]\n-    }\n-  ]\n-} as ISerializedFormSection\n"
                },
                {
                    "date": 1718669679405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n           ],\n           conditionals: [\n             {\n               action: 'hide',\n-              expression: 'console.log(draftData)'\n+              expression: 'console.log(values)'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718669735813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,10 @@\n           ],\n           conditionals: [\n             {\n               action: 'hide',\n-              expression: 'console.log(values)'\n+              expression:\n+                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718669847703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n           conditionals: [\n             {\n               action: 'hide',\n               expression:\n-                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n+                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); console.log(eventDatePlusLateRegistrationTarget) const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718669859917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n           conditionals: [\n             {\n               action: 'hide',\n               expression:\n-                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); console.log(eventDatePlusLateRegistrationTarget) const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n+                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); console.log(eventDatePlusLateRegistrationTarget); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718669897396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n+import { formMessageDescriptors } from '../common/messages'\n+import { ISerializedFormSection } from '../types/types'\n+import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n+import { values } from 'lodash'\n+\n+export const registrationSection = {\n+  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n+  viewType: 'hidden',\n+  name: {\n+    defaultMessage: 'Registration',\n+    description: 'Form section name for Registration',\n+    id: 'form.section.declaration.name'\n+  },\n+  groups: [],\n+  mapping: getSectionMapping('registration')\n+} as ISerializedFormSection\n+\n+export const birthDocumentExtraValue = {\n+  CHILD: 'CHILD',\n+  FATHER: 'FATHER',\n+  MOTHER: 'MOTHER',\n+  PARENT: 'PARENT',\n+  OTHER: 'OTHER',\n+  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n+  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n+  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n+}\n+\n+export const birthDocumentType = {\n+  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n+  NATIONAL_ID: 'NATIONAL_ID',\n+  PASSPORT: 'PASSPORT',\n+  OTHER: 'OTHER',\n+  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n+  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n+  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n+  AFFIDAVIT: 'AFFIDAVIT'\n+}\n+\n+export const documentsSection = {\n+  id: 'documents',\n+  viewType: 'form',\n+  name: formMessageDescriptors.documentsName,\n+  title: {\n+    defaultMessage: 'Attaching supporting documents',\n+    description: 'Form section title for Documents',\n+    id: 'form.section.documents.title'\n+  },\n+  groups: [\n+    {\n+      id: 'documents-view-group',\n+      fields: [\n+        {\n+          name: 'paragraph',\n+          type: 'PARAGRAPH',\n+          label: formMessageDescriptors.documentsParagraph,\n+          initialValue: '',\n+          validator: []\n+        },\n+        {\n+          name: 'uploadDocAffidavitForChild',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.affidavitSupportingDocuments,\n+          initialValue: '',\n+          values: birthDocumentType.AFFIDAVIT,\n+          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n+          hideAsterisk: true,\n+          required: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.AFFIDAVIT,\n+              label: formMessageDescriptors.affidavit\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; console.log(offlineCountryConfig); eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForChildDOB',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfBirth,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.CHILD,\n+          hideAsterisk: true,\n+          required: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n+              label: formMessageDescriptors.docTypeChildBirthProof\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForMother',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfMothersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.MOTHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Mother only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.mother && !draftData.mother.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForFather',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfFathersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.FATHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Father only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.father && !draftData.father.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForInformant',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfInformantsID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForProofOfLegalGuardian',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.otherBirthSupportingDocuments,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n+              label: formMessageDescriptors.legalGuardianProof\n+            },\n+            {\n+              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n+              label: formMessageDescriptors.assignedResponsibilityProof\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        }\n+      ]\n+    }\n+  ]\n+} as ISerializedFormSection\n"
                },
                {
                    "date": 1718669930160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n           conditionals: [\n             {\n               action: 'hide',\n               expression:\n-                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; console.log(offlineCountryConfig); eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n+                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; console.log(lateRegistrationTarget); eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n@@ -237,244 +237,4 @@\n       ]\n     }\n   ]\n } as ISerializedFormSection\n-import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n-import { formMessageDescriptors } from '../common/messages'\n-import { ISerializedFormSection } from '../types/types'\n-import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n-import { values } from 'lodash'\n-\n-export const registrationSection = {\n-  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n-  viewType: 'hidden',\n-  name: {\n-    defaultMessage: 'Registration',\n-    description: 'Form section name for Registration',\n-    id: 'form.section.declaration.name'\n-  },\n-  groups: [],\n-  mapping: getSectionMapping('registration')\n-} as ISerializedFormSection\n-\n-export const birthDocumentExtraValue = {\n-  CHILD: 'CHILD',\n-  FATHER: 'FATHER',\n-  MOTHER: 'MOTHER',\n-  PARENT: 'PARENT',\n-  OTHER: 'OTHER',\n-  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n-  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n-  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n-}\n-\n-export const birthDocumentType = {\n-  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n-  NATIONAL_ID: 'NATIONAL_ID',\n-  PASSPORT: 'PASSPORT',\n-  OTHER: 'OTHER',\n-  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n-  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n-  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n-  AFFIDAVIT: 'AFFIDAVIT'\n-}\n-\n-export const documentsSection = {\n-  id: 'documents',\n-  viewType: 'form',\n-  name: formMessageDescriptors.documentsName,\n-  title: {\n-    defaultMessage: 'Attaching supporting documents',\n-    description: 'Form section title for Documents',\n-    id: 'form.section.documents.title'\n-  },\n-  groups: [\n-    {\n-      id: 'documents-view-group',\n-      fields: [\n-        {\n-          name: 'paragraph',\n-          type: 'PARAGRAPH',\n-          label: formMessageDescriptors.documentsParagraph,\n-          initialValue: '',\n-          validator: []\n-        },\n-        {\n-          name: 'uploadDocAffidavitForChild',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.affidavitSupportingDocuments,\n-          initialValue: '',\n-          values: birthDocumentType.AFFIDAVIT,\n-          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n-          hideAsterisk: true,\n-          required: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.AFFIDAVIT,\n-              label: formMessageDescriptors.affidavit\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); console.log(eventDatePlusLateRegistrationTarget); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForChildDOB',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfBirth,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.CHILD,\n-          hideAsterisk: true,\n-          required: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n-              label: formMessageDescriptors.docTypeChildBirthProof\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForMother',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfMothersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.MOTHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Mother only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.mother && !draftData.mother.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForFather',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfFathersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.FATHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Father only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.father && !draftData.father.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForInformant',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfInformantsID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForProofOfLegalGuardian',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.otherBirthSupportingDocuments,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n-              label: formMessageDescriptors.legalGuardianProof\n-            },\n-            {\n-              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n-              label: formMessageDescriptors.assignedResponsibilityProof\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        }\n-      ]\n-    }\n-  ]\n-} as ISerializedFormSection\n"
                },
                {
                    "date": 1718670010710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n           conditionals: [\n             {\n               action: 'hide',\n               expression:\n-                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; console.log(lateRegistrationTarget); eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n+                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget; console.log(!pattern.test(draftData.child.childBirthDate));'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718670048497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n           conditionals: [\n             {\n               action: 'hide',\n               expression:\n-                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget; console.log(!pattern.test(draftData.child.childBirthDate));'\n+                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718670115201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n+import { formMessageDescriptors } from '../common/messages'\n+import { ISerializedFormSection } from '../types/types'\n+import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n+import { values } from 'lodash'\n+\n+export const registrationSection = {\n+  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n+  viewType: 'hidden',\n+  name: {\n+    defaultMessage: 'Registration',\n+    description: 'Form section name for Registration',\n+    id: 'form.section.declaration.name'\n+  },\n+  groups: [],\n+  mapping: getSectionMapping('registration')\n+} as ISerializedFormSection\n+\n+export const birthDocumentExtraValue = {\n+  CHILD: 'CHILD',\n+  FATHER: 'FATHER',\n+  MOTHER: 'MOTHER',\n+  PARENT: 'PARENT',\n+  OTHER: 'OTHER',\n+  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n+  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n+  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n+}\n+\n+export const birthDocumentType = {\n+  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n+  NATIONAL_ID: 'NATIONAL_ID',\n+  PASSPORT: 'PASSPORT',\n+  OTHER: 'OTHER',\n+  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n+  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n+  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n+  AFFIDAVIT: 'AFFIDAVIT'\n+}\n+\n+export const documentsSection = {\n+  id: 'documents',\n+  viewType: 'form',\n+  name: formMessageDescriptors.documentsName,\n+  title: {\n+    defaultMessage: 'Attaching supporting documents',\n+    description: 'Form section title for Documents',\n+    id: 'form.section.documents.title'\n+  },\n+  groups: [\n+    {\n+      id: 'documents-view-group',\n+      fields: [\n+        {\n+          name: 'paragraph',\n+          type: 'PARAGRAPH',\n+          label: formMessageDescriptors.documentsParagraph,\n+          initialValue: '',\n+          validator: []\n+        },\n+        {\n+          name: 'uploadDocAffidavitForChild',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.affidavitSupportingDocuments,\n+          initialValue: '',\n+          values: birthDocumentType.AFFIDAVIT,\n+          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n+          hideAsterisk: true,\n+          required: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.AFFIDAVIT,\n+              label: formMessageDescriptors.affidavit\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget; console.log(today < eventDatePlusLateRegistrationTarget);'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForChildDOB',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfBirth,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.CHILD,\n+          hideAsterisk: true,\n+          required: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n+              label: formMessageDescriptors.docTypeChildBirthProof\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForMother',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfMothersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.MOTHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Mother only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.mother && !draftData.mother.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForFather',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfFathersID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.FATHER,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              description: 'Hidden for Parent Details none or Father only',\n+              action: 'hide',\n+              expression:\n+                'draftData && draftData.father && !draftData.father.detailsExist'\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForInformant',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.proofOfInformantsID,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.NATIONAL_ID,\n+              label: formMessageDescriptors.docTypeNID\n+            },\n+            {\n+              value: birthDocumentType.PASSPORT,\n+              label: formMessageDescriptors.docTypePassport\n+            },\n+            {\n+              value: birthDocumentType.BIRTH_CERTIFICATE,\n+              label: formMessageDescriptors.docTypeBirthCert\n+            },\n+            {\n+              value: birthDocumentType.OTHER,\n+              label: formMessageDescriptors.docTypeOther\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        },\n+        {\n+          name: 'uploadDocForProofOfLegalGuardian',\n+          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n+          label: formMessageDescriptors.otherBirthSupportingDocuments,\n+          initialValue: '',\n+          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n+          hideAsterisk: true,\n+          validator: [],\n+          options: [\n+            {\n+              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n+              label: formMessageDescriptors.legalGuardianProof\n+            },\n+            {\n+              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n+              label: formMessageDescriptors.assignedResponsibilityProof\n+            }\n+          ],\n+          conditionals: [\n+            {\n+              action: 'hide',\n+              expression:\n+                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n+            }\n+          ],\n+          mapping: getFieldMapping('documents')\n+        }\n+      ]\n+    }\n+  ]\n+} as ISerializedFormSection\n"
                },
                {
                    "date": 1718670154961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n           conditionals: [\n             {\n               action: 'hide',\n               expression:\n-                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget; console.log(today < eventDatePlusLateRegistrationTarget);'\n+                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget; console.log(!pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget);'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n@@ -237,244 +237,4 @@\n       ]\n     }\n   ]\n } as ISerializedFormSection\n-import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\n-import { formMessageDescriptors } from '../common/messages'\n-import { ISerializedFormSection } from '../types/types'\n-import { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n-import { values } from 'lodash'\n-\n-export const registrationSection = {\n-  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n-  viewType: 'hidden',\n-  name: {\n-    defaultMessage: 'Registration',\n-    description: 'Form section name for Registration',\n-    id: 'form.section.declaration.name'\n-  },\n-  groups: [],\n-  mapping: getSectionMapping('registration')\n-} as ISerializedFormSection\n-\n-export const birthDocumentExtraValue = {\n-  CHILD: 'CHILD',\n-  FATHER: 'FATHER',\n-  MOTHER: 'MOTHER',\n-  PARENT: 'PARENT',\n-  OTHER: 'OTHER',\n-  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n-  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF',\n-  AFFIDAVIT_PROOF: 'AFFIDAVIT_PROOF'\n-}\n-\n-export const birthDocumentType = {\n-  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n-  NATIONAL_ID: 'NATIONAL_ID',\n-  PASSPORT: 'PASSPORT',\n-  OTHER: 'OTHER',\n-  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n-  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n-  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n-  AFFIDAVIT: 'AFFIDAVIT'\n-}\n-\n-export const documentsSection = {\n-  id: 'documents',\n-  viewType: 'form',\n-  name: formMessageDescriptors.documentsName,\n-  title: {\n-    defaultMessage: 'Attaching supporting documents',\n-    description: 'Form section title for Documents',\n-    id: 'form.section.documents.title'\n-  },\n-  groups: [\n-    {\n-      id: 'documents-view-group',\n-      fields: [\n-        {\n-          name: 'paragraph',\n-          type: 'PARAGRAPH',\n-          label: formMessageDescriptors.documentsParagraph,\n-          initialValue: '',\n-          validator: []\n-        },\n-        {\n-          name: 'uploadDocAffidavitForChild',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.affidavitSupportingDocuments,\n-          initialValue: '',\n-          values: birthDocumentType.AFFIDAVIT,\n-          extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n-          hideAsterisk: true,\n-          required: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.AFFIDAVIT,\n-              label: formMessageDescriptors.affidavit\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForChildDOB',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfBirth,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.CHILD,\n-          hideAsterisk: true,\n-          required: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n-              label: formMessageDescriptors.docTypeChildBirthProof\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForMother',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfMothersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.MOTHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Mother only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.mother && !draftData.mother.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForFather',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfFathersID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.FATHER,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              description: 'Hidden for Parent Details none or Father only',\n-              action: 'hide',\n-              expression:\n-                'draftData && draftData.father && !draftData.father.detailsExist'\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForInformant',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.proofOfInformantsID,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.NATIONAL_ID,\n-              label: formMessageDescriptors.docTypeNID\n-            },\n-            {\n-              value: birthDocumentType.PASSPORT,\n-              label: formMessageDescriptors.docTypePassport\n-            },\n-            {\n-              value: birthDocumentType.BIRTH_CERTIFICATE,\n-              label: formMessageDescriptors.docTypeBirthCert\n-            },\n-            {\n-              value: birthDocumentType.OTHER,\n-              label: formMessageDescriptors.docTypeOther\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        },\n-        {\n-          name: 'uploadDocForProofOfLegalGuardian',\n-          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n-          label: formMessageDescriptors.otherBirthSupportingDocuments,\n-          initialValue: '',\n-          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n-          hideAsterisk: true,\n-          validator: [],\n-          options: [\n-            {\n-              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n-              label: formMessageDescriptors.legalGuardianProof\n-            },\n-            {\n-              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n-              label: formMessageDescriptors.assignedResponsibilityProof\n-            }\n-          ],\n-          conditionals: [\n-            {\n-              action: 'hide',\n-              expression:\n-                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n-            }\n-          ],\n-          mapping: getFieldMapping('documents')\n-        }\n-      ]\n-    }\n-  ]\n-} as ISerializedFormSection\n"
                },
                {
                    "date": 1718670176410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,9 @@\n         {\n           name: 'uploadDocAffidavitForChild',\n           type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n           label: formMessageDescriptors.affidavitSupportingDocuments,\n+          custom: true,\n           initialValue: '',\n           values: birthDocumentType.AFFIDAVIT,\n           extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n           hideAsterisk: true,\n"
                },
                {
                    "date": 1718670266903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n           conditionals: [\n             {\n               action: 'hide',\n               expression:\n-                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget; console.log(!pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget);'\n+                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718670272406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,10 +77,9 @@\n           ],\n           conditionals: [\n             {\n               action: 'hide',\n-              expression:\n-                'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n+              expression: 'true'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718670327493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,10 @@\n   PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n   AFFIDAVIT: 'AFFIDAVIT'\n }\n \n+const expression: string = ''\n+\n export const documentsSection = {\n   id: 'documents',\n   viewType: 'form',\n   name: formMessageDescriptors.documentsName,\n"
                },
                {
                    "date": 1718670360903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,10 @@\n   PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY',\n   AFFIDAVIT: 'AFFIDAVIT'\n }\n \n-const expression: string = ''\n+const expression: string =\n+  'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(values.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(values.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n \n export const documentsSection = {\n   id: 'documents',\n   viewType: 'form',\n@@ -79,9 +80,9 @@\n           ],\n           conditionals: [\n             {\n               action: 'hide',\n-              expression: 'true'\n+              expression: 'console.log(draftData)'\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718670416090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n   AFFIDAVIT: 'AFFIDAVIT'\n }\n \n const expression: string =\n-  'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(values.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(values.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n+  'const pattern = /^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$/; const today = new Date(); const eventDatePlusLateRegistrationTarget = new Date(draftData.child.childBirthDate); const lateRegistrationTarget = offlineCountryConfig && offlineCountryConfig.config.BIRTH.LATE_REGISTRATION_TARGET; eventDatePlusLateRegistrationTarget.setDate(eventDatePlusLateRegistrationTarget.getDate() + lateRegistrationTarget); !pattern.test(draftData.child.childBirthDate) || today < eventDatePlusLateRegistrationTarget;'\n \n export const documentsSection = {\n   id: 'documents',\n   viewType: 'form',\n@@ -80,9 +80,9 @@\n           ],\n           conditionals: [\n             {\n               action: 'hide',\n-              expression: 'console.log(draftData)'\n+              expression\n             }\n           ],\n           mapping: getFieldMapping('documents')\n         },\n"
                },
                {
                    "date": 1718672037404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,8 @@\n           type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n           label: formMessageDescriptors.affidavitSupportingDocuments,\n           custom: true,\n           initialValue: '',\n-          values: birthDocumentType.AFFIDAVIT,\n           extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n           hideAsterisk: true,\n           required: true,\n           validator: [],\n"
                },
                {
                    "date": 1718672162177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,12 @@\n           name: 'uploadDocAffidavitForChild',\n           type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n           label: formMessageDescriptors.affidavitSupportingDocuments,\n           custom: true,\n-          initialValue: '',\n+          initialValue: {\n+            value: birthDocumentType.AFFIDAVIT,\n+            label: formMessageDescriptors.affidavit\n+          },\n           extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n           hideAsterisk: true,\n           required: true,\n           validator: [],\n"
                },
                {
                    "date": 1718672407598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,13 +64,9 @@\n         {\n           name: 'uploadDocAffidavitForChild',\n           type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n           label: formMessageDescriptors.affidavitSupportingDocuments,\n-          custom: true,\n-          initialValue: {\n-            value: birthDocumentType.AFFIDAVIT,\n-            label: formMessageDescriptors.affidavit\n-          },\n+          initialValue: '',\n           extraValue: birthDocumentExtraValue.AFFIDAVIT_PROOF,\n           hideAsterisk: true,\n           required: true,\n           validator: [],\n"
                }
            ],
            "date": 1713981718149,
            "name": "Commit-0",
            "content": "import { getSectionMapping } from '@countryconfig/utils/mapping/section/birth/mapping-utils'\nimport { formMessageDescriptors } from '../common/messages'\nimport { ISerializedFormSection } from '../types/types'\nimport { getFieldMapping } from '@countryconfig/utils/mapping/field-mapping-utils'\n\nexport const registrationSection = {\n  id: 'registration', // A hidden 'registration' section must be included to store identifiers in a form draft that are used in certificates\n  viewType: 'hidden',\n  name: {\n    defaultMessage: 'Registration',\n    description: 'Form section name for Registration',\n    id: 'form.section.declaration.name'\n  },\n  groups: [],\n  mapping: getSectionMapping('registration')\n} as ISerializedFormSection\n\nexport const birthDocumentExtraValue = {\n  CHILD: 'CHILD',\n  FATHER: 'FATHER',\n  MOTHER: 'MOTHER',\n  PARENT: 'PARENT',\n  OTHER: 'OTHER',\n  INFORMANT_ID_PROOF: 'INFORMANT_ID_PROOF',\n  LEGAL_GUARDIAN_PROOF: 'LEGAL_GUARDIAN_PROOF'\n}\n\nexport const birthDocumentType = {\n  BIRTH_CERTIFICATE: 'BIRTH_CERTIFICATE',\n  NATIONAL_ID: 'NATIONAL_ID',\n  PASSPORT: 'PASSPORT',\n  OTHER: 'OTHER',\n  NOTIFICATION_OF_BIRTH: 'NOTIFICATION_OF_BIRTH',\n  PROOF_OF_LEGAL_GUARDIANSHIP: 'PROOF_OF_LEGAL_GUARDIANSHIP',\n  PROOF_OF_ASSIGNED_RESPONSIBILITY: 'PROOF_OF_ASSIGNED_RESPONSIBILITY'\n}\n\nexport const documentsSection = {\n  id: 'documents',\n  viewType: 'form',\n  name: formMessageDescriptors.documentsName,\n  title: {\n    defaultMessage: 'Attaching supporting documents',\n    description: 'Form section title for Documents',\n    id: 'form.section.documents.title'\n  },\n  groups: [\n    {\n      id: 'documents-view-group',\n      fields: [\n        {\n          name: 'paragraph',\n          type: 'PARAGRAPH',\n          label: formMessageDescriptors.documentsParagraph,\n          initialValue: '',\n          validator: []\n        },\n        {\n          name: 'uploadDocForChildDOB',\n          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n          label: formMessageDescriptors.proofOfBirth,\n          initialValue: '',\n          extraValue: birthDocumentExtraValue.CHILD,\n          hideAsterisk: true,\n          required: true,\n          validator: [],\n          options: [\n            {\n              value: birthDocumentType.NOTIFICATION_OF_BIRTH,\n              label: formMessageDescriptors.docTypeChildBirthProof\n            }\n          ],\n          mapping: getFieldMapping('documents')\n        },\n        {\n          name: 'uploadDocForMother',\n          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n          label: formMessageDescriptors.proofOfMothersID,\n          initialValue: '',\n          extraValue: birthDocumentExtraValue.MOTHER,\n          hideAsterisk: true,\n          validator: [],\n          options: [\n            {\n              value: birthDocumentType.NATIONAL_ID,\n              label: formMessageDescriptors.docTypeNID\n            },\n            {\n              value: birthDocumentType.PASSPORT,\n              label: formMessageDescriptors.docTypePassport\n            },\n            {\n              value: birthDocumentType.BIRTH_CERTIFICATE,\n              label: formMessageDescriptors.docTypeBirthCert\n            },\n            {\n              value: birthDocumentType.OTHER,\n              label: formMessageDescriptors.docTypeOther\n            }\n          ],\n          conditionals: [\n            {\n              description: 'Hidden for Parent Details none or Mother only',\n              action: 'hide',\n              expression:\n                'draftData && draftData.mother && !draftData.mother.detailsExist'\n            }\n          ],\n          mapping: getFieldMapping('documents')\n        },\n        {\n          name: 'uploadDocForFather',\n          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n          label: formMessageDescriptors.proofOfFathersID,\n          initialValue: '',\n          extraValue: birthDocumentExtraValue.FATHER,\n          hideAsterisk: true,\n          validator: [],\n          options: [\n            {\n              value: birthDocumentType.NATIONAL_ID,\n              label: formMessageDescriptors.docTypeNID\n            },\n            {\n              value: birthDocumentType.PASSPORT,\n              label: formMessageDescriptors.docTypePassport\n            },\n            {\n              value: birthDocumentType.BIRTH_CERTIFICATE,\n              label: formMessageDescriptors.docTypeBirthCert\n            },\n            {\n              value: birthDocumentType.OTHER,\n              label: formMessageDescriptors.docTypeOther\n            }\n          ],\n          conditionals: [\n            {\n              description: 'Hidden for Parent Details none or Father only',\n              action: 'hide',\n              expression:\n                'draftData && draftData.father && !draftData.father.detailsExist'\n            }\n          ],\n          mapping: getFieldMapping('documents')\n        },\n        {\n          name: 'uploadDocForInformant',\n          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n          label: formMessageDescriptors.proofOfInformantsID,\n          initialValue: '',\n          extraValue: birthDocumentExtraValue.INFORMANT_ID_PROOF,\n          hideAsterisk: true,\n          validator: [],\n          options: [\n            {\n              value: birthDocumentType.NATIONAL_ID,\n              label: formMessageDescriptors.docTypeNID\n            },\n            {\n              value: birthDocumentType.PASSPORT,\n              label: formMessageDescriptors.docTypePassport\n            },\n            {\n              value: birthDocumentType.BIRTH_CERTIFICATE,\n              label: formMessageDescriptors.docTypeBirthCert\n            },\n            {\n              value: birthDocumentType.OTHER,\n              label: formMessageDescriptors.docTypeOther\n            }\n          ],\n          conditionals: [\n            {\n              action: 'hide',\n              expression:\n                \"draftData?.informant?.informantType === 'MOTHER' || draftData?.informant?.informantType === 'FATHER'\"\n            }\n          ],\n          mapping: getFieldMapping('documents')\n        },\n        {\n          name: 'uploadDocForProofOfLegalGuardian',\n          type: 'DOCUMENT_UPLOADER_WITH_OPTION',\n          label: formMessageDescriptors.otherBirthSupportingDocuments,\n          initialValue: '',\n          extraValue: birthDocumentExtraValue.LEGAL_GUARDIAN_PROOF,\n          hideAsterisk: true,\n          validator: [],\n          options: [\n            {\n              value: birthDocumentType.PROOF_OF_LEGAL_GUARDIANSHIP,\n              label: formMessageDescriptors.legalGuardianProof\n            },\n            {\n              value: birthDocumentType.PROOF_OF_ASSIGNED_RESPONSIBILITY,\n              label: formMessageDescriptors.assignedResponsibilityProof\n            }\n          ],\n          conditionals: [\n            {\n              action: 'hide',\n              expression:\n                \"(draftData && draftData.registration && draftData.registration.informantType && selectedInformantAndContactType.selectedInformantType && (selectedInformantAndContactType.selectedInformantType === 'MOTHER' || selectedInformantAndContactType.selectedInformantType === 'FATHER'))\"\n            }\n          ],\n          mapping: getFieldMapping('documents')\n        }\n      ]\n    }\n  ]\n} as ISerializedFormSection\n"
        }
    ]
}